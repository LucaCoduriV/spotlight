// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.17.

// Section: imports

use super::*;
use crate::api::core::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: dart2rust

impl CstDecode<flutter_rust_bridge::for_generated::anyhow::Error>
    for *mut wire_cst_list_prim_u_8_strict
{
    fn cst_decode(self) -> flutter_rust_bridge::for_generated::anyhow::Error {
        unimplemented!()
    }
}
impl CstDecode<flutter_rust_bridge::DartOpaque> for *const std::ffi::c_void {
    fn cst_decode(self) -> flutter_rust_bridge::DartOpaque {
        unsafe { flutter_rust_bridge::for_generated::cst_decode_dart_opaque(self as _) }
    }
}
impl
    CstDecode<
        flutter_rust_bridge::RustOpaque<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StateApp>,
        >,
    > for *const std::ffi::c_void
{
    fn cst_decode(
        self,
    ) -> flutter_rust_bridge::RustOpaque<
        flutter_rust_bridge::for_generated::rust_async::RwLock<StateApp>,
    > {
        unsafe { flutter_rust_bridge::for_generated::cst_decode_rust_opaque(self) }
    }
}
impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<crate::api::core::BlazyrComponent> for wire_cst_blazyr_component {
    fn cst_decode(self) -> crate::api::core::BlazyrComponent {
        match self.tag {
            0 => {
                let ans = unsafe { self.kind.Container };
                crate::api::core::BlazyrComponent::Container {
                    child: ans.child.cst_decode(),
                    on_click: ans.on_click.cst_decode(),
                }
            }
            1 => {
                let ans = unsafe { self.kind.Column };
                crate::api::core::BlazyrComponent::Column {
                    children: ans.children.cst_decode(),
                }
            }
            2 => {
                let ans = unsafe { self.kind.Row };
                crate::api::core::BlazyrComponent::Row {
                    children: ans.children.cst_decode(),
                }
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::core::BlazyrEntityActionResponse>
    for wire_cst_blazyr_entity_action_response
{
    fn cst_decode(self) -> crate::api::core::BlazyrEntityActionResponse {
        match self.tag {
            0 => {
                let ans = unsafe { self.kind.Ui };
                crate::api::core::BlazyrEntityActionResponse::Ui(ans.field0.cst_decode())
            }
            1 => {
                let ans = unsafe { self.kind.Text };
                crate::api::core::BlazyrEntityActionResponse::Text(ans.field0.cst_decode())
            }
            2 => crate::api::core::BlazyrEntityActionResponse::None,
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::core::BlazyrComponent> for *mut wire_cst_blazyr_component {
    fn cst_decode(self) -> crate::api::core::BlazyrComponent {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::core::BlazyrComponent>::cst_decode(*wrap).into()
    }
}
impl CstDecode<crate::api::core::Image> for *mut wire_cst_image {
    fn cst_decode(self) -> crate::api::core::Image {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::core::Image>::cst_decode(*wrap).into()
    }
}
impl CstDecode<Box<crate::api::core::BlazyrComponent>> for *mut wire_cst_blazyr_component {
    fn cst_decode(self) -> Box<crate::api::core::BlazyrComponent> {
        let wrap = unsafe { flutter_rust_bridge::for_generated::box_from_leak_ptr(self) };
        CstDecode::<crate::api::core::BlazyrComponent>::cst_decode(*wrap).into()
    }
}
impl CstDecode<crate::api::core::Entity> for wire_cst_entity {
    fn cst_decode(self) -> crate::api::core::Entity {
        crate::api::core::Entity {
            index: self.index.cst_decode(),
            name: self.name.cst_decode(),
            alias: self.alias.cst_decode(),
            description: self.description.cst_decode(),
            icon: self.icon.cst_decode(),
            r#type: self.r#type.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::core::EntityError> for wire_cst_entity_error {
    fn cst_decode(self) -> crate::api::core::EntityError {
        match self.tag {
            0 => {
                let ans = unsafe { self.kind.Unknown };
                crate::api::core::EntityError::Unknown(ans.field0.cst_decode())
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<crate::api::core::Image> for wire_cst_image {
    fn cst_decode(self) -> crate::api::core::Image {
        match self.tag {
            0 => {
                let ans = unsafe { self.kind.Data };
                crate::api::core::Image::Data(ans.field0.cst_decode())
            }
            1 => {
                let ans = unsafe { self.kind.Path };
                crate::api::core::Image::Path(ans.field0.cst_decode())
            }
            _ => unreachable!(),
        }
    }
}
impl CstDecode<Vec<crate::api::core::BlazyrComponent>> for *mut wire_cst_list_blazyr_component {
    fn cst_decode(self) -> Vec<crate::api::core::BlazyrComponent> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::core::Entity>> for *mut wire_cst_list_entity {
    fn cst_decode(self) -> Vec<crate::api::core::Entity> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
pub trait NewWithNullPtr {
    fn new_with_null_ptr() -> Self;
}

impl<T> NewWithNullPtr for *mut T {
    fn new_with_null_ptr() -> Self {
        std::ptr::null_mut()
    }
}
impl NewWithNullPtr for wire_cst_blazyr_component {
    fn new_with_null_ptr() -> Self {
        Self {
            tag: -1,
            kind: BlazyrComponentKind { nil__: () },
        }
    }
}
impl Default for wire_cst_blazyr_component {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_blazyr_entity_action_response {
    fn new_with_null_ptr() -> Self {
        Self {
            tag: -1,
            kind: BlazyrEntityActionResponseKind { nil__: () },
        }
    }
}
impl Default for wire_cst_blazyr_entity_action_response {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_entity {
    fn new_with_null_ptr() -> Self {
        Self {
            index: Default::default(),
            name: core::ptr::null_mut(),
            alias: core::ptr::null_mut(),
            description: core::ptr::null_mut(),
            icon: core::ptr::null_mut(),
            r#type: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_entity {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_entity_error {
    fn new_with_null_ptr() -> Self {
        Self {
            tag: -1,
            kind: EntityErrorKind { nil__: () },
        }
    }
}
impl Default for wire_cst_entity_error {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_image {
    fn new_with_null_ptr() -> Self {
        Self {
            tag: -1,
            kind: ImageKind { nil__: () },
        }
    }
}
impl Default for wire_cst_image {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_dart_fn_deliver_output(
    call_id: i32,
    ptr_: *mut u8,
    rust_vec_len_: i32,
    data_len_: i32,
) {
    let message = unsafe {
        flutter_rust_bridge::for_generated::Dart2RustMessageSse::from_wire(
            ptr_,
            rust_vec_len_,
            data_len_,
        )
    };
    FLUTTER_RUST_BRIDGE_HANDLER.dart_fn_handle_output(call_id, message)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_StateApp_execute(
    port_: i64,
    that: *const std::ffi::c_void,
    id: usize,
    arg: *mut wire_cst_list_prim_u_8_strict,
    on_executed: *const std::ffi::c_void,
) {
    wire_StateApp_execute_impl(port_, that, id, arg, on_executed)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_StateApp_get_commands(
    port_: i64,
    that: *const std::ffi::c_void,
) {
    wire_StateApp_get_commands_impl(port_, that)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_StateApp_new(port_: i64) {
    wire_StateApp_new_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_init_app(port_: i64) {
    wire_init_app_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_on_exit(port_: i64) {
    wire_on_exit_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_search(
    port_: i64,
    obj: *const std::ffi::c_void,
    search: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_search_impl(port_, obj, search)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_wire_set_dart_action_stream(port_: i64) {
    wire_set_dart_action_stream_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        flutter_rust_bridge::for_generated::rust_arc_increment_strong_count::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StateApp>,
        >(ptr);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
    ptr: *const std::ffi::c_void,
) {
    unsafe {
        flutter_rust_bridge::for_generated::rust_arc_decrement_strong_count::<
            flutter_rust_bridge::for_generated::rust_async::RwLock<StateApp>,
        >(ptr);
    }
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_box_autoadd_blazyr_component(
) -> *mut wire_cst_blazyr_component {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(
        wire_cst_blazyr_component::new_with_null_ptr(),
    )
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_box_autoadd_image() -> *mut wire_cst_image {
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wire_cst_image::new_with_null_ptr())
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_box_blazyr_component() -> *mut wire_cst_blazyr_component
{
    flutter_rust_bridge::for_generated::new_leak_box_ptr(
        wire_cst_blazyr_component::new_with_null_ptr(),
    )
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_list_blazyr_component(
    len: i32,
) -> *mut wire_cst_list_blazyr_component {
    let wrap = wire_cst_list_blazyr_component {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_blazyr_component>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_list_entity(len: i32) -> *mut wire_cst_list_entity {
    let wrap = wire_cst_list_entity {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_entity>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_spotlight_cst_new_list_prim_u_8_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_strict {
    let ans = wire_cst_list_prim_u_8_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_blazyr_component {
    tag: i32,
    kind: BlazyrComponentKind,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union BlazyrComponentKind {
    Container: wire_cst_BlazyrComponent_Container,
    Column: wire_cst_BlazyrComponent_Column,
    Row: wire_cst_BlazyrComponent_Row,
    nil__: (),
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_BlazyrComponent_Container {
    child: *mut wire_cst_blazyr_component,
    on_click: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_BlazyrComponent_Column {
    children: *mut wire_cst_list_blazyr_component,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_BlazyrComponent_Row {
    children: *mut wire_cst_list_blazyr_component,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_blazyr_entity_action_response {
    tag: i32,
    kind: BlazyrEntityActionResponseKind,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union BlazyrEntityActionResponseKind {
    Ui: wire_cst_BlazyrEntityActionResponse_Ui,
    Text: wire_cst_BlazyrEntityActionResponse_Text,
    nil__: (),
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_BlazyrEntityActionResponse_Ui {
    field0: *mut wire_cst_blazyr_component,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_BlazyrEntityActionResponse_Text {
    field0: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_entity {
    index: usize,
    name: *mut wire_cst_list_prim_u_8_strict,
    alias: *mut wire_cst_list_prim_u_8_strict,
    description: *mut wire_cst_list_prim_u_8_strict,
    icon: *mut wire_cst_image,
    r#type: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_entity_error {
    tag: i32,
    kind: EntityErrorKind,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union EntityErrorKind {
    Unknown: wire_cst_EntityError_Unknown,
    nil__: (),
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_EntityError_Unknown {
    field0: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_image {
    tag: i32,
    kind: ImageKind,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub union ImageKind {
    Data: wire_cst_Image_Data,
    Path: wire_cst_Image_Path,
    nil__: (),
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_Image_Data {
    field0: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_Image_Path {
    field0: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_blazyr_component {
    ptr: *mut wire_cst_blazyr_component,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_entity {
    ptr: *mut wire_cst_entity,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_strict {
    ptr: *mut u8,
    len: i32,
}
