// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.17.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'api/simple.dart';
import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_StateAppPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateAppPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  StateApp
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          dynamic raw);

  @protected
  StateApp
      dco_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          dynamic raw);

  @protected
  StateApp
      dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          dynamic raw);

  @protected
  FutureOr<void> Function() dco_decode_DartFn_Inputs__Output_unit(dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  StateApp
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  Image dco_decode_box_autoadd_image(dynamic raw);

  @protected
  DartAction dco_decode_dart_action(dynamic raw);

  @protected
  Entity dco_decode_entity(dynamic raw);

  @protected
  EntityError dco_decode_entity_error(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  Image dco_decode_image(dynamic raw);

  @protected
  List<Entity> dco_decode_list_entity(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  Image? dco_decode_opt_box_autoadd_image(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  StateApp
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          SseDeserializer deserializer);

  @protected
  StateApp
      sse_decode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          SseDeserializer deserializer);

  @protected
  StateApp
      sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  StateApp
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  Image sse_decode_box_autoadd_image(SseDeserializer deserializer);

  @protected
  DartAction sse_decode_dart_action(SseDeserializer deserializer);

  @protected
  Entity sse_decode_entity(SseDeserializer deserializer);

  @protected
  EntityError sse_decode_entity_error(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  Image sse_decode_image(SseDeserializer deserializer);

  @protected
  List<Entity> sse_decode_list_entity(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  Image? sse_decode_opt_box_autoadd_image(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_AnyhowException(
      AnyhowException raw) {
    throw UnimplementedError();
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_cst_image> cst_encode_box_autoadd_image(Image raw) {
    final ptr = wire.cst_new_box_autoadd_image();
    cst_api_fill_to_wire_image(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_list_entity> cst_encode_list_entity(List<Entity> raw) {
    final ans = wire.cst_new_list_entity(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_entity(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<wire_cst_image> cst_encode_opt_box_autoadd_image(Image? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_image(raw);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_image(
      Image apiObj, ffi.Pointer<wire_cst_image> wireObj) {
    cst_api_fill_to_wire_image(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_entity(Entity apiObj, wire_cst_entity wireObj) {
    wireObj.index = cst_encode_usize(apiObj.index);
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.alias = cst_encode_opt_String(apiObj.alias);
    wireObj.description = cst_encode_opt_String(apiObj.description);
    wireObj.icon = cst_encode_opt_box_autoadd_image(apiObj.icon);
    wireObj.type = cst_encode_String(apiObj.type);
  }

  @protected
  void cst_api_fill_to_wire_entity_error(
      EntityError apiObj, wire_cst_entity_error wireObj) {
    if (apiObj is EntityError_Unknown) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Unknown.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_image(Image apiObj, wire_cst_image wireObj) {
    if (apiObj is Image_Data) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Data.field0 = pre_field0;
      return;
    }
    if (apiObj is Image_Path) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Path.field0 = pre_field0;
      return;
    }
  }

  @protected
  PlatformPointer
      cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp raw);

  @protected
  PlatformPointer
      cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp raw);

  @protected
  PlatformPointer
      cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp raw);

  @protected
  PlatformPointer cst_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() raw);

  @protected
  PlatformPointer cst_encode_DartOpaque(Object raw);

  @protected
  PlatformPointer
      cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp raw);

  @protected
  int cst_encode_dart_action(DartAction raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  void cst_encode_unit(void raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  void sse_encode_AnyhowException(
      AnyhowException self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp self, SseSerializer serializer);

  @protected
  void sse_encode_DartFn_Inputs__Output_unit(
      FutureOr<void> Function() self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
          StateApp self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_image(Image self, SseSerializer serializer);

  @protected
  void sse_encode_dart_action(DartAction self, SseSerializer serializer);

  @protected
  void sse_encode_entity(Entity self, SseSerializer serializer);

  @protected
  void sse_encode_entity_error(EntityError self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_image(Image self, SseSerializer serializer);

  @protected
  void sse_encode_list_entity(List<Entity> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_image(Image? self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,
              ffi.Int32)>>('frbgen_spotlight_dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  void wire_StateApp_execute(
    int port_,
    ffi.Pointer<ffi.Void> that,
    int id,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> arg,
    ffi.Pointer<ffi.Void> on_executed,
  ) {
    return _wire_StateApp_execute(
      port_,
      that,
      id,
      arg,
      on_executed,
    );
  }

  late final _wire_StateApp_executePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<ffi.Void>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Void>)>>(
      'frbgen_spotlight_wire_StateApp_execute');
  late final _wire_StateApp_execute = _wire_StateApp_executePtr.asFunction<
      void Function(int, ffi.Pointer<ffi.Void>, int,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>, ffi.Pointer<ffi.Void>)>();

  void wire_StateApp_get_commands(
    int port_,
    ffi.Pointer<ffi.Void> that,
  ) {
    return _wire_StateApp_get_commands(
      port_,
      that,
    );
  }

  late final _wire_StateApp_get_commandsPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>)>>(
      'frbgen_spotlight_wire_StateApp_get_commands');
  late final _wire_StateApp_get_commands = _wire_StateApp_get_commandsPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Void>)>();

  void wire_StateApp_new(
    int port_,
  ) {
    return _wire_StateApp_new(
      port_,
    );
  }

  late final _wire_StateApp_newPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_spotlight_wire_StateApp_new');
  late final _wire_StateApp_new =
      _wire_StateApp_newPtr.asFunction<void Function(int)>();

  void wire_init_app(
    int port_,
  ) {
    return _wire_init_app(
      port_,
    );
  }

  late final _wire_init_appPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_spotlight_wire_init_app');
  late final _wire_init_app =
      _wire_init_appPtr.asFunction<void Function(int)>();

  void wire_on_exit(
    int port_,
  ) {
    return _wire_on_exit(
      port_,
    );
  }

  late final _wire_on_exitPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_spotlight_wire_on_exit');
  late final _wire_on_exit = _wire_on_exitPtr.asFunction<void Function(int)>();

  void wire_search(
    int port_,
    ffi.Pointer<ffi.Void> obj,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> search,
  ) {
    return _wire_search(
      port_,
      obj,
      search,
    );
  }

  late final _wire_searchPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.Pointer<ffi.Void>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_spotlight_wire_search');
  late final _wire_search = _wire_searchPtr.asFunction<
      void Function(int, ffi.Pointer<ffi.Void>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  void wire_set_dart_action_stream(
    int port_,
  ) {
    return _wire_set_dart_action_stream(
      port_,
    );
  }

  late final _wire_set_dart_action_streamPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>(
          'frbgen_spotlight_wire_set_dart_action_stream');
  late final _wire_set_dart_action_stream =
      _wire_set_dart_action_streamPtr.asFunction<void Function(int)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateAppPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_spotlight_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateAppPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateAppPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_spotlight_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateApp =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockStateAppPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<wire_cst_image> cst_new_box_autoadd_image() {
    return _cst_new_box_autoadd_image();
  }

  late final _cst_new_box_autoadd_imagePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_image> Function()>>(
          'frbgen_spotlight_cst_new_box_autoadd_image');
  late final _cst_new_box_autoadd_image = _cst_new_box_autoadd_imagePtr
      .asFunction<ffi.Pointer<wire_cst_image> Function()>();

  ffi.Pointer<wire_cst_list_entity> cst_new_list_entity(
    int len,
  ) {
    return _cst_new_list_entity(
      len,
    );
  }

  late final _cst_new_list_entityPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_entity> Function(
              ffi.Int32)>>('frbgen_spotlight_cst_new_list_entity');
  late final _cst_new_list_entity = _cst_new_list_entityPtr
      .asFunction<ffi.Pointer<wire_cst_list_entity> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(
              ffi.Int32)>>('frbgen_spotlight_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Image_Data extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_Image_Path extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class ImageKind extends ffi.Union {
  external wire_cst_Image_Data Data;

  external wire_cst_Image_Path Path;
}

final class wire_cst_image extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ImageKind kind;
}

final class wire_cst_entity extends ffi.Struct {
  @ffi.UintPtr()
  external int index;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> alias;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> description;

  external ffi.Pointer<wire_cst_image> icon;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> type;
}

final class wire_cst_list_entity extends ffi.Struct {
  external ffi.Pointer<wire_cst_entity> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_EntityError_Unknown extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class EntityErrorKind extends ffi.Union {
  external wire_cst_EntityError_Unknown Unknown;
}

final class wire_cst_entity_error extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external EntityErrorKind kind;
}
